{ parameter
    (or (or (or (or (pair %balance_of
                       (list %requests (pair (address %owner) (nat %token_id)))
                       (contract %callback
                          (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                    (list %burn_token (pair (address %owner) (nat %tokenId) (nat %amount_))))
                (or (pair %create_token
                       (pair (pair (nat %token_id) (map %token_info string bytes)) address)
                       nat)
                    (list %mint_token (pair (address %owner) (nat %tokenId) (nat %amount_)))))
            (or (or (list %permit (pair key signature bytes)) (address %setAdmin))
                (or (pair %setExpiry address nat (option bytes))
                    (list %transfer
                       (pair (address %from_) (list %tx (pair (address %to_) (nat %token_id) (nat %amount))))))))
        (list %update_operators
           (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
               (pair %remove_operator (address %owner) (address %operator) (nat %token_id))))) ;
  storage
    (pair (pair (pair (pair %extension
                         (pair (pair (address %admin) (nat %counter)) (nat %defaultExpiry) (nat %maxExpiry))
                         (pair (big_map %permitExpiries (pair address bytes) (option nat))
                               (big_map %permits (pair address bytes) timestamp))
                         (big_map %tokenTotalSupply nat nat)
                         (big_map %userExpiries address (option nat)))
                      (big_map %ledger (pair address nat) nat))
                (big_map %metadata string bytes)
                (big_map %operators (pair address address) (set nat)))
          (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (big_map (pair address nat) nat) address nat)
           nat
           { UNPAIR 3 ; DUG 2 ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (big_map (pair address nat) nat) address nat nat)
           (big_map (pair address nat) nat)
           { UNPAIR 4 ; DIG 3 ; SOME ; DIG 3 ; DIG 3 ; PAIR ; UPDATE } ;
         LAMBDA
           (pair (pair (lambda
                          (pair (big_map (pair address nat) nat) address nat nat)
                          (big_map (pair address nat) nat))
                       (lambda (pair (big_map (pair address nat) nat) address nat) nat))
                 (pair (big_map (pair address nat) nat) address nat nat))
           (big_map (pair address nat) nat)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR 4 ;
             DUP 3 ;
             DUP 3 ;
             DUP 3 ;
             PAIR 3 ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             PUSH string "FA2_INSUFFICIENT_BALANCE" ;
             DUP 6 ;
             DUP 3 ;
             COMPARE ;
             GE ;
             IF { DROP } { FAILWITH } ;
             DIG 4 ;
             SWAP ;
             SUB ;
             ABS ;
             DUG 3 ;
             PAIR 4 ;
             EXEC } ;
         DUP 3 ;
         DUP 3 ;
         PAIR ;
         APPLY ;
         LAMBDA
           (pair (pair (lambda
                          (pair (big_map (pair address nat) nat) address nat nat)
                          (big_map (pair address nat) nat))
                       (lambda (pair (big_map (pair address nat) nat) address nat) nat))
                 (pair (big_map (pair address nat) nat) address nat nat))
           (big_map (pair address nat) nat)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR 4 ;
             DUP 3 ;
             DUP 3 ;
             DUP 3 ;
             PAIR 3 ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DIG 4 ;
             ADD ;
             DUG 3 ;
             PAIR 4 ;
             EXEC } ;
         DUP 4 ;
         DUP 4 ;
         PAIR ;
         APPLY ;
         DIG 2 ;
         DROP ;
         LAMBDA
           address
           unit
           { PUSH string "The sender can only manage operators for his own token" ;
             SENDER ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; UNIT } { FAILWITH } } ;
         LAMBDA
           (pair string
                 (pair (pair (pair (pair (pair (pair (pair address nat) nat nat)
                                               (pair (big_map (pair address bytes) (option nat)) (big_map (pair address bytes) timestamp))
                                               (big_map nat nat)
                                               (big_map address (option nat)))
                                         (big_map (pair address nat) nat))
                                   (big_map string bytes)
                                   (big_map (pair address address) (set nat)))
                             (big_map nat (pair nat (map string bytes))))
                       nat))
           unit
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             DIG 2 ;
             SWAP ;
             CDR ;
             DIG 2 ;
             GET ;
             IF_NONE { FAILWITH } { DROP 2 } ;
             UNIT } ;
         DUP 6 ;
         APPLY ;
         LAMBDA
           (pair (pair (pair (pair (pair (pair (pair address nat) nat nat)
                                         (pair (big_map (pair address bytes) (option nat)) (big_map (pair address bytes) timestamp))
                                         (big_map nat nat)
                                         (big_map address (option nat)))
                                   (big_map (pair address nat) nat))
                             (big_map string bytes)
                             (big_map (pair address address) (set nat)))
                       (big_map nat (pair nat (map string bytes))))
                 (big_map (pair address nat) nat))
           (pair (pair (pair (pair (pair (pair address nat) nat nat)
                                   (pair (big_map (pair address bytes) (option nat)) (big_map (pair address bytes) timestamp))
                                   (big_map nat nat)
                                   (big_map address (option nat)))
                             (big_map (pair address nat) nat))
                       (big_map string bytes)
                       (big_map (pair address address) (set nat)))
                 (big_map nat (pair nat (map string bytes))))
           { UNPAIR ;
             DUP ;
             CDR ;
             DUP 2 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR } ;
         NIL operation ;
         LAMBDA
           (pair (pair (pair address nat) nat nat)
                 (pair (big_map (pair address bytes) (option nat)) (big_map (pair address bytes) timestamp))
                 (big_map nat nat)
                 (big_map address (option nat)))
           unit
           { PUSH string "NOT_AN_ADMIN" ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { DROP ; UNIT } { FAILWITH } } ;
         LAMBDA
           (pair string (pair (big_map nat nat) nat))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             GET ;
             IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         DUP 10 ;
         APPLY ;
         DIG 9 ;
         DROP ;
         LAMBDA
           (pair (pair (pair (pair address nat) nat nat)
                       (pair (big_map (pair address bytes) (option nat)) (big_map (pair address bytes) timestamp))
                       (big_map nat nat)
                       (big_map address (option nat)))
                 (big_map nat nat))
           (pair (pair (pair address nat) nat nat)
                 (pair (big_map (pair address bytes) (option nat)) (big_map (pair address bytes) timestamp))
                 (big_map nat nat)
                 (big_map address (option nat)))
           { UNPAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             DUP 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } ;
         DIG 10 ;
         UNPAIR ;
         IF_LEFT
           { DIG 8 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { DIG 8 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DIG 8 ;
                         DROP 6 ;
                         UNPAIR ;
                         MAP { DUP ;
                               UNPAIR ;
                               DUP 2 ;
                               DUP 6 ;
                               PAIR ;
                               DUP 7 ;
                               SWAP ;
                               EXEC ;
                               DROP ;
                               DUP 5 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               PAIR 3 ;
                               DUP 6 ;
                               SWAP ;
                               EXEC ;
                               SWAP ;
                               PAIR } ;
                         DIG 3 ;
                         DIG 4 ;
                         DROP 2 ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS }
                       { DIG 7 ;
                         DIG 9 ;
                         DROP 2 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         SWAP ;
                         ITER { SWAP ;
                                UNPAIR ;
                                DIG 2 ;
                                UNPAIR 3 ;
                                DUP 2 ;
                                DUP 6 ;
                                PAIR ;
                                DUP 9 ;
                                SWAP ;
                                EXEC ;
                                DUP 4 ;
                                SWAP ;
                                SUB ;
                                ABS ;
                                DIG 5 ;
                                SWAP ;
                                SOME ;
                                DUP 4 ;
                                UPDATE ;
                                DUG 3 ;
                                DIG 4 ;
                                PAIR 4 ;
                                DUP 8 ;
                                SWAP ;
                                EXEC ;
                                PAIR } ;
                         DIG 3 ;
                         DIG 6 ;
                         DROP 2 ;
                         UNPAIR ;
                         DIG 2 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP } }
                   { DIG 9 ;
                     DIG 10 ;
                     DROP 2 ;
                     IF_LEFT
                       { DIG 3 ;
                         DIG 7 ;
                         DROP 2 ;
                         UNPAIR ;
                         UNPAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         DUP 5 ;
                         CDR ;
                         PUSH string "TOKEN_ID_ALREADY_PRESENT" ;
                         DUP 2 ;
                         DUP 4 ;
                         MEM ;
                         NOT ;
                         IF { DROP } { FAILWITH } ;
                         DUP 3 ;
                         DIG 2 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIG 4 ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         DUP 3 ;
                         CAR ;
                         DIG 4 ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PAIR 4 ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 6 ;
                         DIG 6 ;
                         CAR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC }
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         SWAP ;
                         ITER { SWAP ;
                                UNPAIR ;
                                DIG 2 ;
                                UNPAIR 3 ;
                                DUP 2 ;
                                DUP 7 ;
                                PAIR ;
                                DUP 12 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                DUP 2 ;
                                DUP 6 ;
                                PAIR ;
                                DUP 9 ;
                                SWAP ;
                                EXEC ;
                                DUP 4 ;
                                ADD ;
                                DIG 5 ;
                                SWAP ;
                                SOME ;
                                DUP 4 ;
                                UPDATE ;
                                DUG 3 ;
                                DIG 4 ;
                                PAIR 4 ;
                                DUP 9 ;
                                SWAP ;
                                EXEC ;
                                PAIR } ;
                         DIG 3 ;
                         DIG 6 ;
                         DIG 7 ;
                         DROP 3 ;
                         UNPAIR ;
                         DIG 2 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC } ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP } }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 6 ;
                 DIG 10 ;
                 DROP 4 ;
                 IF_LEFT
                   { DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 3 ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         ITER { UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                DUP 2 ;
                                DUP 5 ;
                                CAR ;
                                CAR ;
                                CDR ;
                                PAIR ;
                                SELF_ADDRESS ;
                                CHAIN_ID ;
                                PAIR ;
                                PAIR ;
                                PACK ;
                                DUP ;
                                DIG 2 ;
                                DUP 5 ;
                                CHECK_SIGNATURE ;
                                IF { DROP ;
                                     SWAP ;
                                     HASH_KEY ;
                                     IMPLICIT_ACCOUNT ;
                                     ADDRESS ;
                                     PAIR ;
                                     DUP 2 ;
                                     CDR ;
                                     CAR ;
                                     CDR ;
                                     DUP 2 ;
                                     GET ;
                                     IF_NONE
                                       { NOW ;
                                         DUP 3 ;
                                         CDR ;
                                         CDR ;
                                         DUP 4 ;
                                         CDR ;
                                         CAR ;
                                         CDR ;
                                         DIG 2 ;
                                         DIG 3 ;
                                         SWAP ;
                                         SOME ;
                                         SWAP ;
                                         UPDATE ;
                                         DUP 3 ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         DUP 2 ;
                                         CAR ;
                                         PAIR ;
                                         DUP ;
                                         CDR ;
                                         DUP 2 ;
                                         CAR ;
                                         CDR ;
                                         PUSH nat 1 ;
                                         DIG 4 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         ADD ;
                                         DIG 3 ;
                                         CAR ;
                                         CAR ;
                                         CAR }
                                       { DUP 4 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         PUSH string "DUP_PERMIT" ;
                                         DUP 2 ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         DUP 5 ;
                                         GET ;
                                         IF_NONE
                                           { DUP 2 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             GET ;
                                             IF_NONE
                                               { SWAP ; CAR ; CDR ; CAR }
                                               { IF_NONE { SWAP ; CAR ; CDR ; CAR } { DIG 2 ; DROP } } }
                                           { IF_NONE { SWAP ; CAR ; CDR ; CAR } { DIG 2 ; DROP } } ;
                                         DIG 2 ;
                                         NOW ;
                                         SUB ;
                                         ABS ;
                                         COMPARE ;
                                         GE ;
                                         IF { DROP } { FAILWITH } ;
                                         NOW ;
                                         DUP 3 ;
                                         CDR ;
                                         CDR ;
                                         DUP 4 ;
                                         CDR ;
                                         CAR ;
                                         CDR ;
                                         DIG 2 ;
                                         SOME ;
                                         DIG 3 ;
                                         UPDATE ;
                                         DUP 3 ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         DUP 2 ;
                                         CAR ;
                                         PAIR ;
                                         DUP ;
                                         CDR ;
                                         DUP 2 ;
                                         CAR ;
                                         CDR ;
                                         PUSH nat 1 ;
                                         DIG 4 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         ADD ;
                                         DIG 3 ;
                                         CAR ;
                                         CAR ;
                                         CAR } ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR }
                                   { SWAP ; DIG 2 ; DIG 3 ; DROP 3 ; PUSH string "MISSIGNED" ; PAIR ; FAILWITH } } ;
                         DUP 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 }
                       { DUP 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         PAIR ;
                         PAIR ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 3 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         PUSH string "MAX_SECONDS_EXCEEDED" ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         COMPARE ;
                         LE ;
                         IF { DROP } { FAILWITH } ;
                         PUSH string "FORBIDDEN_EXPIRY_UPDATE" ;
                         DUP 4 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { DROP } { FAILWITH } ;
                         SWAP ;
                         IF_NONE
                           { DUP 3 ;
                             CDR ;
                             DUP 4 ;
                             CAR ;
                             CDR ;
                             DUP 5 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 6 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DIG 6 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DIG 5 ;
                             SOME ;
                             DIG 6 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DUP 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR }
                           { DUP 4 ;
                             CDR ;
                             DUP 5 ;
                             CAR ;
                             CDR ;
                             DUP 6 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 7 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIG 9 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             CAR ;
                             DIG 8 ;
                             SOME ;
                             DIG 8 ;
                             DIG 9 ;
                             PAIR ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR } ;
                         PAIR }
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         SWAP ;
                         ITER { SWAP ;
                                UNPAIR ;
                                DUP 3 ;
                                PACK ;
                                BLAKE2B ;
                                DUP 3 ;
                                CDR ;
                                CAR ;
                                CDR ;
                                DUP 2 ;
                                DUP 6 ;
                                CAR ;
                                PAIR ;
                                GET ;
                                IF_NONE { PUSH timestamp 0 } {} ;
                                PUSH timestamp 0 ;
                                DUP 2 ;
                                COMPARE ;
                                EQ ;
                                IF { DROP 2 ; SWAP ; PUSH bool False ; PAIR }
                                   { DUP 4 ;
                                     CDR ;
                                     CAR ;
                                     CAR ;
                                     DUP 3 ;
                                     DUP 7 ;
                                     CAR ;
                                     PAIR ;
                                     GET ;
                                     IF_NONE
                                       { DUP 4 ;
                                         CDR ;
                                         CDR ;
                                         CDR ;
                                         DUP 6 ;
                                         CAR ;
                                         GET ;
                                         IF_NONE { DUP 4 ; CAR ; CDR ; CAR ; SOME } {} }
                                       {} ;
                                     IF_NONE
                                       { SWAP ; DIG 3 ; DROP 3 ; PUSH string "NO_EXPIRY_FOUND" ; FAILWITH }
                                       { SWAP ;
                                         NOW ;
                                         SUB ;
                                         ABS ;
                                         COMPARE ;
                                         LT ;
                                         DUP 4 ;
                                         CDR ;
                                         CDR ;
                                         DUP 5 ;
                                         CDR ;
                                         CAR ;
                                         CDR ;
                                         DIG 3 ;
                                         DUP 7 ;
                                         CAR ;
                                         PAIR ;
                                         NONE timestamp ;
                                         SWAP ;
                                         UPDATE ;
                                         DUP 5 ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         DIG 3 ;
                                         CAR ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR } } ;
                                UNPAIR ;
                                DIG 3 ;
                                UNPAIR ;
                                DIG 4 ;
                                DIG 2 ;
                                ITER { UNPAIR 3 ;
                                       DUP 2 ;
                                       DUP 9 ;
                                       PAIR ;
                                       DUP 11 ;
                                       SWAP ;
                                       EXEC ;
                                       DROP ;
                                       DUP 6 ;
                                       NOT ;
                                       IF { SENDER ;
                                            DUP 6 ;
                                            DUP 2 ;
                                            COMPARE ;
                                            EQ ;
                                            IF { DROP }
                                               { DUP 9 ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 SWAP ;
                                                 DUP 7 ;
                                                 PAIR ;
                                                 GET ;
                                                 IF_NONE { EMPTY_SET nat } {} ;
                                                 DUP 3 ;
                                                 MEM ;
                                                 IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                                            DUP 3 ;
                                            DUP 3 ;
                                            DUP 7 ;
                                            DIG 6 ;
                                            PAIR 4 ;
                                            DUP 12 ;
                                            SWAP ;
                                            EXEC ;
                                            PAIR 4 ;
                                            DUP 8 ;
                                            SWAP ;
                                            EXEC }
                                          { DUP 3 ;
                                            DUP 3 ;
                                            DUP 7 ;
                                            DIG 6 ;
                                            PAIR 4 ;
                                            DUP 12 ;
                                            SWAP ;
                                            EXEC ;
                                            PAIR 4 ;
                                            DUP 8 ;
                                            SWAP ;
                                            EXEC } } ;
                                SWAP ;
                                DIG 2 ;
                                DROP 2 ;
                                PAIR } ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 3 ;
                         UNPAIR ;
                         DUP 3 ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 } } ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 9 ;
             DIG 10 ;
             DIG 11 ;
             DROP 9 ;
             DUP 2 ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             ITER { IF_LEFT
                      { UNPAIR 3 ;
                        DUP 2 ;
                        DUP 2 ;
                        COMPARE ;
                        EQ ;
                        IF { DROP 3 }
                           { DUP ;
                             DUP 7 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP 4 ;
                             DIG 4 ;
                             DUP 4 ;
                             DUP 4 ;
                             PAIR ;
                             GET ;
                             IF_NONE { EMPTY_SET nat } {} ;
                             DIG 4 ;
                             PUSH bool True ;
                             SWAP ;
                             UPDATE ;
                             SOME ;
                             DIG 3 ;
                             DIG 3 ;
                             PAIR ;
                             UPDATE } }
                      { UNPAIR 3 ;
                        DUP 2 ;
                        DUP 2 ;
                        COMPARE ;
                        EQ ;
                        IF { DROP 3 }
                           { DUP ;
                             DUP 7 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP 4 ;
                             DUP 3 ;
                             DUP 3 ;
                             PAIR ;
                             GET ;
                             IF_NONE
                               { DIG 2 ; DROP ; NONE (set nat) }
                               { DIG 3 ;
                                 PUSH bool False ;
                                 SWAP ;
                                 UPDATE ;
                                 PUSH nat 0 ;
                                 DUP 2 ;
                                 SIZE ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DROP ; NONE (set nat) } { SOME } } ;
                             DIG 3 ;
                             SWAP ;
                             DIG 3 ;
                             DIG 3 ;
                             PAIR ;
                             UPDATE } } } ;
             DIG 2 ;
             DROP ;
             DUP 2 ;
             CDR ;
             SWAP ;
             DUP 3 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation } ;
         PAIR } }

